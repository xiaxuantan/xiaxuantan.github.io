{"version":3,"sources":["components/Navigation/Navigation.js","components/SideColumn/SideColumn.js","components/About/About.js","components/Posts/Posts.js","components/CodeBlock/CodeBlock.js","containers/Post/Post.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","props","navLinks","Object","keys","links","map","key","Nav","Link","as","to","Navbar","bg","variant","expand","Brand","href","Toggle","aria-controls","Collapse","id","className","SOCIAL_MEDIA_MAPPING","Github","faGithub","Weibo","faWeibo","Linkedin","faLinkedin","sideColumn","socialMedia","icon","Image","src","roundedCircle","bloggerName","bloggerHeadline","about","Posts","postItems","this","postsMeta","obj","title","date","Table","striped","responsive","hover","Component","CodeBlock","language","value","style","coy","PureComponent","defaultProps","useState","content","setContent","useParams","p","find","element","console","log","useEffect","axios","get","link","then","response","data","paddingTop","source","renderers","code","Footer","Card","color","fontSize","SOCIAL_MEDIA","NAVIGATION_LINKS","Projects","Biography","POSTS_META","App","Container","Row","Col","xs","lg","minHeight","path","Post","Boolean","window","location","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.afb80ce6.chunk.js","sourcesContent":["import React from 'react'\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { Link } from 'react-router-dom';\n\nconst Navigation = (props) => {\n    const navLinks = Object.keys(props.links).map(key =>\n        <Nav.Link as={Link} to={props.links[key]} key={key}>{key}</Nav.Link>\n    )\n    return (\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"sm\">\n            <Navbar.Brand href=\"/\">About</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    {navLinks}\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar >\n    );\n};\n\nexport default Navigation;","import React from 'react';\nimport { Image } from 'react-bootstrap';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { faGithub, faLinkedin, faWeibo } from '@fortawesome/free-brands-svg-icons'\n\nimport './SideColumn.css';\n\n\nconst SOCIAL_MEDIA_MAPPING = {\n  Github: faGithub,\n  Weibo: faWeibo,\n  Linkedin: faLinkedin\n}\n\n\nconst sideColumn = (props) => {\n\n  const socialMedia = Object.keys(props.socialMedia).map(key =>\n    (\n      <div key={key} className=\"bloggerLink\">\n        <a href={props.socialMedia[key]}>\n          <FontAwesomeIcon icon={SOCIAL_MEDIA_MAPPING[key]} />\n          {' ' + key}\n        </a>\n      </div>\n    )\n  );\n\n  return (\n    <div>\n      <div className=\"avatarFrame\">\n        <Image src=\"avatar.jpg\" roundedCircle className=\"avatar\" />\n      </div>\n      <div className='bloggerInfo'>\n        <div className=\"bloggerName\">\n          {props.bloggerName}\n        </div>\n        <div className=\"bloggerHeadline\">\n          {props.bloggerHeadline}\n        </div>\n      </div>\n      <div className=\"bloggerLinks\">\n        {socialMedia}\n      </div>\n    </div >\n  )\n}\n\nexport default sideColumn;","import React from 'react';\nimport './About.css';\n\nconst about = () => {\n    return (\n        <div className=\"about-bg\">\n        </div>\n    )\n}\n\nexport default about;","import React, { Component } from 'react';\nimport { Table } from \"react-bootstrap\";\nimport { Link } from 'react-router-dom';\nimport './Posts.css';\n\n\nclass Posts extends Component {\n\n    // TODO: add pagination\n\n    render() {\n        const postItems = this.props.postsMeta.map(obj => (\n            <tr className=\"row m-0\">\n                <td className=\"col-md-8 col-lg-9\">\n                    <Link to={'/post/' + obj.key}>\n                        {obj.title}\n                    </Link>\n                </td>\n                <td className=\"no-display-when-narrow col-md-4 col-lg-3\">{obj.date}</td>\n            </tr>\n        ))\n        return (\n            <Table striped responsive hover>\n                <thead>\n                    <tr className=\"row m-0\">\n                        <th className=\"col-md-8 col-lg-9\">Title</th>\n                        <th className=\"no-display-when-narrow col-md-4 col-lg-3\">Published Time</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {postItems}\n                </tbody>\n            </Table>\n        )\n    }\n}\n\nexport default Posts;","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { coy } from \"react-syntax-highlighter/dist/esm/styles/prism\";\n\n\nclass CodeBlock extends PureComponent {\n    static propTypes = {\n        value: PropTypes.string.isRequired,\n        language: PropTypes.string\n    };\n\n    static defaultProps = {\n        language: null\n    };\n\n    render() {\n        const { language, value } = this.props;\n        return (\n            <SyntaxHighlighter language={language} style={coy}>\n                {value}\n            </SyntaxHighlighter>\n        );\n    }\n}\n\nexport default CodeBlock;","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport ReactMarkdown from 'react-markdown';\nimport CodeBlock from '../../components/CodeBlock/CodeBlock';\n\nexport default function (props) {\n\n    const [content, setContent] = useState('');\n    let { key } = useParams();\n    const p = props.postsMeta.find(element => element.key === key);\n\n    console.log(props.postsMeta);\n    console.log(key);\n    console.log(p);\n\n    useEffect(() => {\n        axios.get(p.link)\n            .then(response => {\n                setContent(response.data);\n            });\n    });\n\n    return (\n        <div style={{ paddingTop: \"10px\" }}>\n            <ReactMarkdown\n                source={content}\n                renderers={{ code: CodeBlock }} />\n        </div>\n    )\n};","import React from 'react'\nimport { Card } from \"react-bootstrap\";\n\nconst Footer = (props) => {\n\n    return (\n        <Card className=\"text-center border-0\">\n            <Card.Footer style={{ color: \"grey\", fontSize: \"small\" }}>\n                Made by <a href=\"https://reactjs.org/\">React</a>.\n                Contact me via <a href=\"mailto:xx.peter.tan@gmail.com\">this address</a>\n            </Card.Footer>\n        </Card>\n    )\n\n};\n\nexport default Footer;","import React from 'react';\nimport {\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Navigation from './components/Navigation/Navigation';\nimport SideColumn from './components/SideColumn/SideColumn';\nimport About from './components/About/About';\nimport Posts from './components/Posts/Posts';\nimport Post from './containers/Post/Post';\nimport Footer from './components/Footer/Footer';\n\nconst SOCIAL_MEDIA = {\n  Linkedin: 'https://www.linkedin.com/in/xiaxuan-tan',\n  Github: 'https://www.github.com/xiaxuantan',\n  Weibo: 'https://www.weibo.com/peterxuan'\n};\n\nconst NAVIGATION_LINKS = {\n  Posts: '/posts',\n  // Publications: '/publications',\n  Projects: '/projects',\n  Biography: '/biography'\n};\n\nconst BLOGGER_NAME = 'Xiaxuan Tan';\n\nconst BlOGGER_HEADLINES = 'BEng @ ZJU; MSCS @ USC';\n\nconst POSTS_META = [\n  {\n    key: 'what-could-possibly-benefit-a-research-team',\n    title: 'What could possibly benefit a research team?',\n    link: 'https://raw.githubusercontent.com/xiaxuantan/notes/master/thoughts/what-could-possibly-benefit-a-research-team.md',\n    date: '2020-01-21',\n  },\n  {\n    key: 'brief-introduction-to-KMP',\n    title: 'Brief introduction to KMP',\n    link: 'https://raw.githubusercontent.com/xiaxuantan/notes/master/algorithm/brief-introduction-to-KMP.md',\n    date: '2019-07-25'\n  }\n];\n\n\nfunction App() {\n  return (\n    <Container>\n      <Navigation links={NAVIGATION_LINKS} />\n      <Row>\n        <Col xs={12} lg={2}>\n          <SideColumn\n            bloggerName={BLOGGER_NAME}\n            bloggerHeadline={BlOGGER_HEADLINES}\n            socialMedia={SOCIAL_MEDIA} />\n        </Col>\n        <Col style={{ minHeight: \"80vh\" }}>\n          <Switch>\n            <Route path=\"/posts\">\n              <Posts postsMeta={POSTS_META} />\n            </Route>\n            <Route path=\"/post/:key\">\n              <Post postsMeta={POSTS_META} />\n            </Route>\n            <Route path=\"/\">\n              <About />\n            </Route>\n          </Switch>\n        </Col>\n      </Row>\n      <Footer />\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(<HashRouter basename='/'><App /></HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}